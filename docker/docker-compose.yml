version: '3'

services:
  elastic:
    image: elasticsearch:8.12.2
    logging:
      driver: "json-file"
      options:
        max-size: "1000m"
        max-file: "10"
    container_name: elastic
    environment:
      - discovery.type=single-node
      - node.name=elastic
      - discovery.seed_hosts=elastic
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - maxprinet
  kibana:
    image: kibana:8.12.2
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    container_name: kibana
    ports:
      - "5601:5601"
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: http://elastic:9200
    networks:
      - maxprinet
  logstash:
    user: root
    image: logstash:8.12.2
    container_name: logstash
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    ports:
      - "5044:5044"
    depends_on:
      - elastic
    environment:
      - PIPELINE_WORKERS=1
      - PIPELINE_BATCH_SIZE=125
      - PIPELINE_BATCH_DELAY=50
    volumes:
      - ./conf/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash_data:/usr/share/logstash/data
      - ./conf/postgresql-42.6.0.jar:/usr/share/logstash/postgresql-42.6.0.jar
    networks:
      - maxprinet
  keycloak-postgres:
    image: postgres
    container_name: keycloak-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak-db
    ports:
      - "5435:5432"
    networks:
      - maxprinet
  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    command:
      - start --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm --spi-user-profile-legacy-user-profile-read-only-attributes *_RES_ACCESS_MODE
    environment:
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak-db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8282:8080"
    depends_on:
      - keycloak-postgres
    networks:
      - maxprinet
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - maxprinet
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - maxprinet
  version-db:
    image: postgres
    container_name: version-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: version
    command:
      - "postgres"
      - "-c"
      - "max_prepared_transactions=100"
    networks:
      - maxprinet
networks:
  maxprinet:
volumes:
  maxpridata:
  article:
  logstash:

